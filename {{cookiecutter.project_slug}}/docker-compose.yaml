
services:

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: db
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "db", "-h", "localhost", "-p", "5432"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    ports:
      - "5436:5432"
    networks:
      - default

  redis-stack:
    image: "redis/redis-stack-server:latest"
# # Custom local redis configuration options
#    volumes:
#       - ./config/redis.conf:/usr/local/etc/redis/redis.conf
#     command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
      - "8001:8001"
    networks:
      - default
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 16G
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # The flask backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile-api
      target: api
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
    environment:
      - HOST=0.0.0.0
      - PORT=5000
      - ENV=testing
      - DEBUG=True
      - USE_HTTPS=False
      - CLIENT_SERVER_URL=http://frontend:3000
      - DATABASE_URL=postgresql://postgres:docker@db:5432
    volumes:
      - ./api:/srv/api
      - ./migrations:/srv/migrations
      - ./tests:/srv/tests
      - ./data/test_assets:/srv/data/test_assets
      - ./data/test_gallery:/srv/data/test_gallery
      - ./backend.py:/srv/backend.py
      - ./config.py:/srv/config.py
      - ./config.json:/srv/config.json
    ports:
      - 5000:5000

#   # The sveltekit web frontend
#   frontend:
#     build:
#       context: .
#       dockerfile: Dockerfile-frontend
#       target: frontend
#     networks:
#       - default
#     depends_on:
#       - db
#       - api
#     ports:
#       - 3000:3000
#     environment:
#       - PORT=3000
#       - NODE_ENV=development
